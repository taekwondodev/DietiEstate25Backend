openapi: 3.0.3
info:
  title: DietiEstate API
  description: API per la gestione di un'applicazione immobiliare.
  version: 1.0.0
servers:
  - url: https://api.realestate.com/v1
    description: Server di produzione
paths:
  /auth/register:
    post:
      summary: Registra un gestore o agente immobiliare
      description: Registra un nuovo utente con email e password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrazioneRequest'
      responses:
        '200':
          description: Utente registrato con successo
        '400':
          description: Richiesta non valida

  /immobile/cerca:
    get:
      summary: Cerca immobili
      description: Cerca immobili con lo stesso comune e altri filtri.
      parameters:
        - name: comune
          in: query
          required: true
          schema:
            type: string
          description: Comune di riferimento per la ricerca.
        - name: prezzoMin
          in: query
          schema:
            type: number
          description: Prezzo minimo.
        - name: prezzoMax
          in: query
          schema:
            type: number
          description: Prezzo massimo.
        - name: dimensione
          in: query
          schema:
            type: number
          description: Dimensione dell'immobile.
        - name: nBagni
          in: query
          schema:
            type: integer
          description: Numero di bagni.
        - name: tipologia
          in: query
          schema:
            type: string
          description: Filtra per tipologia di immobile.
      responses:
        '200':
          description: Lista di immobili trovati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Immobile'
        '404':
          description: Nessun immobile trovato

  /immobile/crea:
    post:
      summary: Crea un nuovo immobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreaImmobileRequest'
      responses:
        '201':
          description: Immobile creato con successo

  /immobile/personali:
    get:
      summary: Ottieni immobili personali
      description: Ottieni la lista degli immobili personali dell'utente.
      responses:
        '200':
          description: Lista di immobili personali
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Immobile'

  /offerta/aggiungi:
    post:
      summary: Invia una nuova offerta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffertaRequest'
      responses:
        '201':
          description: Offerta inviata con successo

  /offerta/aggiorna:
    patch:
      summary: Aggiorna lo stato di un'offerta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffertaRequest'
      responses:
        '200':
          description: Stato dell'offerta aggiornato

  /offerta/riepilogo:
    get:
      summary: Riepilogo delle offerte del cliente
      description: Ottieni il riepilogo delle offerte del cliente.
      responses:
        '200':
          description: Lista delle offerte del cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Offerta'

  /visita/prenota:
    post:
      summary: Invia una nuova richiesta di visita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitaRequest'
      responses:
        '201':
          description: Richiesta di visita inviata con successo

  /visita/aggiorna:
    patch:
      summary: Aggiorna lo stato di una visita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitaRequest'
      responses:
        '200':
          description: Stato della visita aggiornato

  /visita/riepilogo:
    get:
      summary: Riepilogo delle visite del cliente
      description: Ottieni il riepilogo delle visite del cliente.
      responses:
        '200':
          description: Lista delle visite del cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Visita'

  /geodata/conteggio-pdi:
    post:
      summary: Ottieni il conteggio dei punti di interesse
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConteggioPuntiInteresseRequest'
      responses:
        '201':
          description: Conteggio dei punti di interesse ottenuto con successo
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer

  /api/meteo:
    post:
      summary: Ottieni previsioni meteo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeteoRequest'
      responses:
        '200':
          description: Previsioni meteo ottenute con successo
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
        '400':
          description: Richiesta non valida
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        '500':
          description: Errore interno del server
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string

components:
  schemas:
    Immobile:
      type: object
      properties:
        idImmobile:
          type: integer
        urlFoto:
          type: string
        descrizione:
          type: string
        prezzo:
          type: number
        dimensione:
          type: number
        nBagni:
          type: integer
        nStanze:
          type: integer
        tipologia:
          type: string
        latitudine:
          type: number
        longitudine:
          type: number
        indirizzo:
          type: string
        comune:
          type: string
        piano:
          type: integer
        hasAscensore:
          type: boolean
        hasBalcone:
          type: boolean
        idResponsabile:
          type: string
          format: uuid

    OffertaRequest:
      type: object
      properties:
        importo:
          type: number
        stato:
          type: string
        idCliente:
          type: string
          format: uuid
        immobile:
          $ref: '#/components/schemas/Immobile'

    VisitaRequest:
      type: object
      properties:
        dataRichiesta:
          type: string
          format: date
        dataVisita:
          type: string
          format: date
        oraVisita:
          type: string
          format: time
        stato:
          type: string
        idCliente:
          type: string
          format: uuid
        immobile:
          $ref: '#/components/schemas/Immobile'

    RegistrazioneRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        group:
          type: string

    ConteggioPuntiInteresseRequest:
      type: object
      properties:
        latitudine:
          type: number
        longitudine:
          type: number
        raggio:
          type: integer
        categorie:
          type: array
          items:
            type: string

    MeteoRequest:
      type: object
      properties:
        latitudine:
          type: string
        longitudine:
          type: string
        date:
          type: string

    Visita:
      type: object
      properties:
        idVisita:
          type: integer
        dataVisita:
          type: string
          format: date
        oraVisita:
          type: string
          format: time
        stato:
          type: string
        idCliente:
          type: string
          format: uuid
        immobile:
          $ref: '#/components/schemas/Immobile'

    Offerta:
      type: object
      properties:
        idOfferta:
          type: integer
        importo:
            type: number
        stato:
            type: string
        idCliente:
            type: string
            format: uuid
        immobile:
            $ref: '#/components/schemas/Immobile'

    CreaImmobileRequest:
        type: object
        properties:
          descrizione:
            type: string
          urlFoto:
            type: string
          prezzo:
            type: number
          dimensione:
            type: number
          nBagni:
            type: integer
          nStanze:
            type: integer
          tipologia:
            type: string
          indirizzo:
            type: string
          comune:
            type: string
          piano:
            type: integer
          hasAscensore:
            type: boolean
          hasBalcone:
            type: boolean