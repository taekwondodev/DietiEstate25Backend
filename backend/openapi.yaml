openapi: 3.0.3
info:
  title: DietiEstate API
  description: API per la gestione di un'applicazione immobiliare.
  version: 1.0.0
servers:
  - url: https://api.realestate.com/v1
    description: Server di produzione
paths:
  /auth/login:
    post:
      summary: Effettua il login
      description: Effettua il login utilizzando credenziali tramite AWS Cognito.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrazioneRequest'
      responses:
        '201':
          description: Login effettuato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Credenziali non valide

  /auth/registrazione:
    post:
      summary: Registra un nuovo utente
      description: Registra un nuovo utente con email e password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrazioneRequest'
      responses:
        '201':
          description: Utente registrato con successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrazioneResponse'
        '400':
          description: Richiesta non valida

  /immobile/cerca:
    get:
      summary: Cerca immobili
      description: Cerca immobili con lo stesso CAP e altri filtri.
      parameters:
        - name: indirizzo
          in: query
          required: true
          schema:
            type: string
          description: Indirizzo di riferimento per la ricerca.
        - name: prezzoMin
          in: query
          schema:
            type: number
          description: Prezzo minimo.
        - name: prezzoMax
          in: query
          schema:
            type: number
          description: Prezzo massimo.
        - name: nStanze
          in: query
          schema:
            type: string
          description: Numero minimo di stanze.
        - name: tipologia
          in: query
          schema:
            type: string
          description: Filtra per tipologia di immobile.
        - name: classeEnergetica
          in: query
          schema:
            type: string
            enum: [ A4, A3, A2, A1, B, C, D, E, F, G ]
      responses:
        '200':
          description: Lista di immobili trovati
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Immobile'
        '404':
          description: Nessun immobile trovato

  /immobile/crea:
    post:
      summary: Crea un nuovo immobile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Immobile'
      responses:
        '201':
          description: Immobile creato con successo

  /offerta/aggiungi:
    post:
      summary: Invia una nuova offerta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffertaRequest'
      responses:
        '201':
          description: Offerta inviata con successo

  /offerta/aggiorna:
    patch:
      summary: Aggiorna lo stato di un'offerta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffertaRequest'
      responses:
        '200':
          description: Stato dell'offerta aggiornato

  /visita/prenota:
    post:
      summary: Invia una nuova richiesta di visita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitaRequest'
      responses:
        '201':
          description: Richiesta di visita inviata con successo

  /visite/{id}/notifica:
    post:
      summary: Invia una notifica all'agente
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID della visita.
      responses:
        '200':
          description: Notifica inviata con successo
  /visita/aggiorna:
    patch:
      summary: Aggiorna lo stato di una visita
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitaRequest'
      responses:
        '200':
          description: Stato della visita aggiornato

components:
  schemas:
    Immobile:
      type: object
      properties:
        descrizione:
          type: string
        prezzo:
          type: number
        nBagni:
          type: integer
        nStanze:
          type: integer
        tipologia:
          type: string
        indirizzo:
          $ref: '#/components/schemas/Indirizzo'
        classeEnergetica:
          type: string
          enum: [A4, A3, A2, A1, B, C, D, E, F, G]
        piano:
          type: integer
        hasAscensore:
          type: boolean
        hasBalcone:
          type: boolean
        idResponsabile:
          type: string
          format: uuid

    OffertaRequest:
      type: object
      properties:
        importo:
          type: number
        stato:
          type: string
        idCliente:
          type: string
          format: uuid
        immobile:
          $ref: '#/components/schemas/Immobile'

    VisitaRequest:
      type: object
      properties:
        dataRichiesta:
          type: string
          format: date
        dataVisita:
          type: string
          format: date
        oraVisita:
          type: string
          format: time
        stato:
          type: string
        idCliente:
          type: string
          format: uuid
        immobile:
          $ref: '#/components/schemas/Immobile'

    Indirizzo:
      type: object
      properties:
        via:
          type: string
        comune:
          type: string
        cap:
          type: string

    RegistrazioneRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        group:
          type: string

    RegistrazioneResponse:
      type: object
      properties:
        uid:
          type: string

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
        idToken:
          type: string
        refreshToken:
          type: string